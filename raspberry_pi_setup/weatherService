#!/bin/sh
#/etc/init.d/weatherService
#
# Based on: https://www.exratione.com/2013/02/nodejs-and-forever-as-a-service-simple-upstart-and-init-scripts-for-ubuntu/
#
### BEGIN INIT INFO
# Provides:       weatherService
# Required-Start:    $local_fs $remote_fs $network $syslog $named
# Required-Stop:     $local_fs $remote_fs $network $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts weatherService
# Description:       starts weatherService using start-stop-daemon
### END INIT INFO
#

NAME="weatherService"
NODE_BIN_DIR="/usr/bin/node"
NODE_PATH="/usr/lib/node_modules"
APPLICATION_PATH="/home/pi/weather/app.js"
PIDFILE="/var/run/weatherService.pid"
LOGFILE="/var/log/weatherService.log"
MIN_UPTIME="5000"
SPIN_SLEEP_TIME="2000"

# Define AWC_DARK_SKY_API_KEY, AWC_WIRED_TH_GPIO, AWC_NTP_SERVER, etc., in the file below:
[ -f /etc/default/weatherService ] && . /etc/default/weatherService

PATH=$NODE_BIN_DIR:$PATH
export NODE_PATH=$NODE_PATH
export AWC_ALLOW_ADMIN=$AWC_ALLOW_ADMIN
export AWC_ALLOW_CORS=$AWC_ALLOW_CORS
export AWC_DARK_SKY_API_KEY=$AWC_DARK_SKY_API_KEY
export AWC_DAYTIME_SERVER=$AWC_DAYTIME_SERVER
export AWC_ALT_DEV_SERVER=$AWC_ALT_DEV_SERVER
export AWC_FREQUENT_ID=$AWC_FREQUENT_ID
export AWC_GIT_REPO_PATH=$AWC_GIT_REPO_PATH
export AWC_GOOGLE_API_KEY=$AWC_GOOGLE_API_KEY
export AWC_LEAP_SECONDS_URL=$AWC_LEAP_SECONDS_URL
export AWC_LICENSED_TO_KILL=$AWC_LICENSED_TO_KILL
export AWC_NTP_SERVER=$AWC_NTP_SERVER
export AWC_PORT=$AWC_PORT
export AWC_PREFERRED_WS=$AWC_PREFERRED_WS
export AWC_WEATHERBIT_API_KEY=$AWC_WEATHERBIT_API_KEY
export AWC_WIRED_TH_GPIO=$AWC_WIRED_TH_GPIO
export AWC_WIRELESS_TH_GPIO=$AWC_WIRELESS_TH_GPIO

start() {
  echo "Starting $NAME"
  forever \
    --pidFile $PIDFILE \
    -a \
    -l $LOGFILE \
    -e $LOGFILE \
    --minUptime $MIN_UPTIME \
    --spinSleepTime $SPIN_SLEEP_TIME \
     --killSignal=SIGTERM \
    start $APPLICATION_PATH 2>%1 > /dev/null &
  RETVAL=$?
}

stop() {
  if [ -f $PIDFILE ]; then
    echo "Shutting down $NAME"
    forever stop $APPLICATION_PATH > /dev/null 2>&1
    rm -f $PIDFILE
    RETVAL=$?
  else
    echo "$NAME is not running"
    RETVAL=0;
  fi
}

restart() {
  stop
  start
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    restart
    ;;
  status)
    if [ -f $PIDFILE ]; then
      echo "+"
    fi
    ;;
  *)
    echo "Usage: {start|stop|restart|status}"
    exit 1
    ;;
esac

exit $RETVAL
